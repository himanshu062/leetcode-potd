/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(!root)
        return 0;
        int maxSum=root->val;
        int maxLevel=1;
        int level=1;
        queue<TreeNode *>que;
        que.push(root);
        while(!que.empty())
        {
            int n= que.size();
            int currentSum=0;
            for(int i=0;i<n;i++)
            {
                TreeNode *node=que.front();
                que.pop();
                currentSum += node->val;
                if(node->left)
                que.push(node->left);
                if(node->right)
                que.push(node->right);

            }
            if(currentSum > maxSum)
            {
                maxSum= currentSum;
                maxLevel = level;
            }
            level++;
        }
        return maxLevel;
    }
};
