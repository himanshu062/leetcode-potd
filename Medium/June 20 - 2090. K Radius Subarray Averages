class Solution {
public:
    vector<int> getAverages(vector<int>& nums, int k) {
       if( k==0)
       return nums;
       int n= nums.size();
       vector <int> averages(n,-1);
       if(2 *  k +1>n)
       return averages;
       vector < long long > prefix(n);
       for (int i=0;i<n;++i)
       {
           if (i-1>=0)
           prefix[i]=prefix[i-1]+nums[i];
           else
           prefix[i]= nums[i];
       }
       for(int i=k;i<n-k;++i)
       {
           int lftbnd= i- k-1, rytbnd = i+k;
           long long subarraySum = 0;
           if(lftbnd <0)
           subarraySum = prefix[rytbnd];
           else
           subarraySum = prefix[rytbnd] - prefix [lftbnd];
           int average = subarraySum /(2 * k+1);
           averages[i]=average;
       }
       return averages;
    }
};
