class Solution {
public:
    int numOfArrays(int n, int m, int k) {
    constexpr int kMod = 1e9+7;
    vector<vector<vector<int>>> dp( n + 1, vector<vector<int>>(m + 1, vector<int>(k + 1)));
    vector<vector<vector<int>>> prefix(n + 1, vector<vector<int>>(m + 1, vector<int>(k + 1)));
    for (int j = 1; j <= m; ++j) {
      dp[1][j][1] = 1;
      prefix[1][j][1] = j;
    }
    for (int i = 2; i <= n; ++i)                 
      for (int j = 1; j <= m; ++j)               
        for (int cost = 1; cost <= k; ++cost) { 
          dp[i][j][cost] = (static_cast<long>(j) * dp[i - 1][j][cost] + prefix[i - 1][j - 1][cost - 1]) % kMod;
          prefix[i][j][cost] = (dp[i][j][cost] + prefix[i][j - 1][cost]) % kMod;
        }
    int ans = 0;
    for (int j = 1; j <= m; ++j) {
      ans += dp[n][j][k];
      ans %= kMod;
    }
    return ans;     
    }
};
