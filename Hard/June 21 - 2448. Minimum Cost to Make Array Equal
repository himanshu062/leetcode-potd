class Solution {
public:
long long solve(vector<int> &nums, vector<int> &cost , long long mid)
{
    long long ans =0;
    for(int i=0;i<nums.size();i++)
    ans =ans +abs(1ll*nums[i]-mid)*(1ll*cost[i]);
    return ans;
}

    long long minCost(vector<int>& nums, vector<int>& cost) {
        long long int total =0,sum=0, n= cost.size();
        vector<pair<int, int >>v;
        for(int i=0;i<n;i++)
        v.push_back({nums[i],cost[i]});
        sort(v.begin(),v.end());
        for(int i=0;i<n;i++)
        sum = sum+1ll*v[i].second;
        long long mid;
        int i=0;
        while(total<(sum+1)/2 && i<n)
        {
            total = total+(1ll*v[i].second);
            mid = v[i].first;
            i++;
        }
        return solve(nums,cost,mid);
    }
};
