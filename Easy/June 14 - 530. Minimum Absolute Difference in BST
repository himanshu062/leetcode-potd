/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void inorder(TreeNode* root,int& result, int&previous)
{
    if(root==nullptr)
    return;
    inorder(root->left, result, previous);
    if(previous!=-1)
    result=min(result,abs(root->val-previous));
    previous = root->val;
    inorder(root->right,result,previous);
}
    int getMinimumDifference(TreeNode* root) {
        int result =100001;
        int previous =-1;
        inorder(root, result, previous);
        return result;
    }
};
